swagger: '2.0'
info:
  title: API Title
  version: '1.0'
tags:
  - name: Lesson
    description: Lesson Information
paths:
  #Lesson 관련 API
  /lesson/{id}:
    get:
      tags:
        - Lesson
      summary: 'Get existing lesson by lesson id'
      description: ''
      operationId: getLesson
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'id'
          in: path
          description: 'lesson id'
          type: integer
          format: int32
          required: true
      responses:
        '200':
          description: 성공적으로 레슨 조회에 성공하였을 때
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 응답에 성공하였습니다.
              data:
                $ref: '#definitions/Lesson'
        '400':
          description: id에 맞는 레슨이 없을 때
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 해당하는 레슨이 없습니다.
              data:
                type: object
    patch:
      tags:
        - Lesson
      summary: 'Edit some fields of a lesson'
      description: ''
      operationId: editLesson
      parameters:
        - name: 'id'
          in: path
          description: 'lesson id'
          type: integer
          format: int32
          required: true
        - name: 'body'
          in: body
          description: 'lesson fields to update lesson information'
          schema:
            $ref: '#definitions/LessonEditable'
          required: true
      responses:
        '200':
          description: a lesson is successfully edited
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: a lesson is successfully edited
              data:
                $ref: '#definitions/Lesson'
        '400':
          description: 'Bad Request: id is missing or not a number, or the request body is invalid'
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 'wrong request of parameter or payload'
              data:
                type: object
        '403':
          description: 'Forbidden: The client is not accessable for editing'
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 'The request agent has no permission to edit'
              data:
                type: object
    delete:
      tags:
        - Lesson
      summary: 'Delete an existing lesson ad'
      description: ''
      operationId: deleteLesson
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'id'
          in: path
          description: 'lesson id'
          type: integer
          format: int32
          required: true
      responses:
        '200':
          description: 'Succesful: a lesson is successfully deleted'
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 'a lesson is successfully deleted'
              data:
                type: object
        '400':
          description: 'Bad Request: id is missing or not a number, or the request body is invalid'
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 'wrong request of parameter or payload'
              data:
                type: object
        '403':
          description: 'Forbidden: The client is not accessable for deleting'
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 'The request agent has no permission to delete'
              data:
                type: object
  /lesson/:
    get:
      tags:
        - Lesson
      summary: '한 번에 여러 개의 레슨을 조회하는 api'
      description: ''
      operationId: getLessons
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          required: true
        - name: limit
          in: query
          type: integer
          format: int32
          required: true
      responses:
        '200':
          description: 최소 1 개의 레슨을 가져오는데 성공하였을 때
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 응답에 성공하였습니다.
              data:
                $ref: '#definitions/LessonCounts'
    post:
      tags:
        - Lesson
      summary: 'Add new lesson ad'
      description: ''
      operationId: submitLesson
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'tutor_id'
          in: query
          description: 'tutor id'
          type: integer
          format: int32
          required: true
        - name: 'body'
          in: body
          description: 'lesson information for submission'
          schema:
            $ref: '#definitions/LessonEditable'
          required: true
      responses:
        '201':
          description: 'Created: added a lesson successfully to database'
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 'The lesson is succesfully submitted'
              data:
                description: 'The lesson information just added'
                $ref: '#definitions/Lesson'
        '400':
          description: 'Bad Request: when some fields are invalid or the request is invalid'
          schema:
            properties:
              message:
                type: string
                example: 'Some fields are invalid'
              data:
                type: object
                example:

  /lesson/user/:id:
    get:
      tags:
        - Lesson
      summary: '한 유저의 레슨을 조회하는 api'
      description: ''
      operationId: getLessons
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          format: int32
          required: true
        - name: offset
          in: query
          type: integer
          format: int32
          required: true
        - name: limit
          in: query
          type: integer
          format: int32
          required: true
      responses:
        '200':
          description: 최소 1 개의 레슨을 가져오는데 성공하였을 때
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 응답에 성공하였습니다.
              data:
                $ref: '#definitions/LessonCounts'
        '400':
          description: 레슨을 가져오는데 실패하였을 때
          schema:
            required:
              - message
              - data
            properties:
              message:
                type: string
                example: 해당하는 유저의 레슨이 더 이상 없습니다.
              data:
                type: object
                example: {}